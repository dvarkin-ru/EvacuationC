// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.bs.js";
import * as Api from "@tauri-apps/api";

function errorHandler(errorMessage) {
  var configElement = document.querySelector(".config");
  if (configElement == null) {
    console.log("No config element found");
  } else {
    configElement.classList.add("display-none");
  }
  var configErrorElement = document.querySelector(".config-error");
  if (configErrorElement == null) {
    console.log("No config error element found");
  } else {
    configErrorElement.innerHTML = "<p>" + errorMessage + "</p>";
  }
  
}

function loadConfigHandler(param) {
  $$Promise.$$catch(Api.invoke("read_config", undefined).then(function (config) {
            console.log(config);
            return Promise.resolve(undefined);
          }), (function (e) {
          if (e.RE_EXN_ID === $$Promise.JsError) {
            var message = e._1.message;
            if (message !== undefined) {
              errorHandler(message);
            } else {
              errorHandler("Unexpected error");
            }
          } else {
            errorHandler("Unexpected error");
          }
          return Promise.resolve(undefined);
        }));
  
}

var startButton = document.getElementById("start-btn");

if (startButton == null) {
  console.log("No start button found");
} else {
  startButton.addEventListener("click", loadConfigHandler);
}

export {
  errorHandler ,
  loadConfigHandler ,
  
}
/* startButton Not a pure module */
